version: "3.9"

services:
  bot:
    build: .
    container_name: bot
    command: ["python", "main.py"]
    env_file: .env
    depends_on:
      - db
      - redis
      - nats
    restart: always

  # worker:
  #   build: .
  #   container_name: worker
  #   command: [ "taskiq", "worker", "taskiq_worker:broker" ]
  #   env_file: .env
  #   depends_on:
  #     - bot
  #     - db
  #     - redis
  #     - nats
  #   restart: always

  migrate:
    build: .
    container_name: migrate
    command: [ "alembic", "upgrade", "head" ]
    env_file: .env
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      - db
    restart: "no" # однократный запуск

  db:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES__DB}
      POSTGRES_USER: ${POSTGRES__USER}
      POSTGRES_PASSWORD: ${POSTGRES__PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: always

  nats:
    image: nats:latest
    container_name: nats
    ports:
      - "4222:4222"
      - "8222:8222" # Monitoring
    volumes:
      - nats_data:/data
    command: >
      -js -sd /data
    restart: always

volumes:
  pgdata:
  nats_data:
